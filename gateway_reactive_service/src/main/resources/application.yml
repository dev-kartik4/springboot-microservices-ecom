server:  port: 8999eureka:  client:    enabled: true    register-with-eureka: true    fetch-registry: true    service-url:      defaultZone: http://eureka-reactive-service:8761/eureka/  instance:    app-name: apigateway-reactive-service    hostname: apigateway-reactive-service    prefer-ip-address: true    instance-id: ${spring.application.name}:${random.value}spring:  application:    name: apigateway-reactive-service  main:    web-application-type: reactive    allow-circular-references: true    allow-bean-definition-overriding: true  cloud:    discovery:      enabled: true    config:      uri: http://config-reactive-service:8888    gateway:      routes:        - id: identification-reactive-service          uri: lb://identification-reactive-service          predicates:            - Path=/identify/**          filters:            - StripPrefix=1            - name: CircuitBreaker              args:                name: identifyCircuitBreaker                fallbackUri: forward:/fallbackerror/identify        - id: customer-reactive-service          uri: lb://customer-reactive-service          predicates:            - Path=/customer/**          filters:            - StripPrefix=1            - name: CircuitBreaker              args:                name: customerCircuitBreaker                fallbackUri: forward:/fallbackerror/customer        - id: order-reactive-service          uri: lb://order-reactive-service          predicates:            - Path=/orders/**          filters:            - StripPrefix=1            - name: CircuitBreaker              args:                name: orderCircuitBreaker                fallbackUri: forward:/fallbackerror/orders        - id: cart-reactive-service          uri: lb://cart-reactive-service          predicates:            - Path=/cart/**          filters:            - StripPrefix=1            - name: CircuitBreaker              args:                name: cartCircuitBreaker                fallbackUri: forward:/fallbackerror/cart        - id: product-reactive-service          uri: lb://product-reactive-service          predicates:            - Path=/products/**          filters:            - StripPrefix=1            - name: CircuitBreaker              args:                name: productCircuitBreaker                fallbackUri: forward:/fallbackerror/products        - id: inventory-reactive-service          uri: lb://inventory-reactive-service          predicates:            - Path=/inventory/**          filters:            - StripPrefix=1            - name: CircuitBreaker              args:                name: inventoryCircuitBreaker                fallbackUri: forward:/fallbackerror/inventory        - id: offers-reactive-service          uri: lb://offers-reactive-service          predicates:            - Path=/offers/**          filters:            - StripPrefix=1            - name: CircuitBreaker              args:                name: offerCircuitBreaker                fallbackUri: forward:/fallbackerror/offers        - id: checkout-reactive-service          uri: lb://checkout-reactive-service          predicates:            - Path=/checkout/**          filters:            - StripPrefix=1            - name: CircuitBreaker              args:                name: checkoutCircuitBreaker                fallbackUri: forward:/fallbackerror/checkout        - id: merchant-reactive-service          uri: lb://merchant-reactive-service          predicates:            - Path=/merchant/**          filters:            - StripPrefix=1            - name: CircuitBreaker              args:                name: merchantCircuitBreaker                fallbackUri: forward:/fallbackerror/merchant        - id: notification-reactive-service          uri: lb://notification-reactive-service          predicates:            - Path=/notification/**          filters:            - StripPrefix=1            - name: CircuitBreaker              args:                name: notificationCircuitBreaker                fallbackUri: forward:/fallbackerror/notification        - id: payment-reactive-service          uri: lb://payment-reactive-service          predicates:            - Path=/payment/**          filters:            - StripPrefix=1            - name: CircuitBreaker              args:                name: paymentCircuitBreaker                fallbackUri: forward:/fallbackerror/payment        - id: shipping-reactive-service          uri: lb://shipping-reactive-service          predicates:            - Path=/shipping/**          filters:            - StripPrefix=1            - name: CircuitBreaker              args:                name: shippingCircuitBreaker                fallbackUri: forward:/fallbackerror/shippingmanagement:  health:    circuitbreaker:      enabled: true  endpoints:    web:      exposure:        include: "*"  endpoint:    health:      show-details: alwaysresilience4j:  circuitbreaker:    instances:      apigateway-reactive-service:        registerHealthIndicator: true        eventConsumerBufferSize: 10        failureRateThreshold: 50        minimumNumberOfCalls: 5        automaticTransitionFromOpenToHalfOpenEnabled: true        waitDurationInOpenState: 5s        permittedNumberOfCallsInHalfOpenState: 3        slidingWindowSize: 10        slidingWindowType: COUNT_BASED  retry:    instances:      apigateway-reactive-service:        registerHealthIndicator: true        maxRetryAttempts: 3        waitDuration: 10s  ratelimiter:    instances:      apigateway-reactive-service:        registerHealthIndicator: false        limitForPeriod: 10        limitRefreshPeriod: 10s        timeoutDuration: 3s