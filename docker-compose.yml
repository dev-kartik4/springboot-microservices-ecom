services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper

  mongodb:
    image: mongo:7.0
    container_name: mongo
    ports:
      - "27017:27017"
    environment:
      SPRING_DATA_MONGODB_URI: mongodb+srv://devkartik:karvysh@kartikcodes.evlntvy.mongodb.net/ecom-reactive-app?ssl=true&sslInvalidHostNameAllowed=true&streamType=netty&retryWrites=true&w=majority&appName=kartikcodes
      MONGO_INITDB_ROOT_USERNAME: kartiktelikicherla@outlook.com 
      MONGO_INITDB_ROOT_PASSWORD: kPHONENUMBER@04


  eureka-reactive-service:
    container_name: eureka-reactive-service
    build:
      context: ./eureka_reactive_service
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    environment:
      SPRING_CLOUD_CONFIG_SERVER_GIT_URI: https://github.com/dev-kartik4/springboot-microservices-ecom
    healthcheck:
      test: ["CMD", "curl", "-f", "http://eureka-reactive-service:8888/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - springboot-ecom-network


  config-reactive-service:
    container_name: config-reactive-service
    build:
      context: ./config_reactive_service
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    environment:
      SPRING_CLOUD_CONFIG_SERVER_GIT_URI: https://github.com/dev-kartik4/springboot-microservices-ecom
    depends_on:
      - eureka-reactive-service
    healthcheck:
      test: ["CMD", "curl", "-f", "http://config-reactive-service:8888/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - springboot-ecom-network


  customer-reactive-service:
    container_name: customer-reactive-service
    build:
      context: ./customer_reactive_service
      dockerfile: Dockerfile
    ports:
      - "8110:8110"
    environment:
      SPRING_CLOUD_CONFIG_URI: http://config-reactive-service:8888
    depends_on:
      - config-reactive-service
      - eureka-reactive-service
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8110/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - springboot-ecom-network


  product-reactive-service:
    container_name: product-reactive-service
    build:
      context: ./product_reactive_service
      dockerfile: Dockerfile
    ports:
      - "8220:8220"
    environment:
      SPRING_CLOUD_CONFIG_URI: http://config-reactive-service:8888
    depends_on:
      - config-reactive-service
      - eureka-reactive-service
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://product-reactive-service:8220/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - springboot-ecom-network

  inventory-reactive-service:
    container_name: inventory-reactive-service
    build:
      context: ./inventory_reactive_service
      dockerfile: Dockerfile
    ports:
      - "8330:8330"
    environment:
      SPRING_CLOUD_CONFIG_URI: http://config-reactive-service:8888
    depends_on:
      - config-reactive-service
      - eureka-reactive-service
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://inventory-reactive-service:8330/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - springboot-ecom-network

  offers-reactive-service:
    container_name: offers-reactive-service
    build:
      context: ./offers_reactive_service
      dockerfile: Dockerfile
    ports:
      - "8440:8440"
    environment:
      SPRING_CLOUD_CONFIG_URI: http://config-reactive-service:8888
    depends_on:
      - config-reactive-service
      - eureka-reactive-service
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://offers-reactive-service:8440/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - springboot-ecom-network


  cart-reactive-service:
    container_name: cart-reactive-service
    build:
      context: ./cart_reactive_service
      dockerfile: Dockerfile
    ports:
      - "8550:8550"
    environment:
      SPRING_CLOUD_CONFIG_URI: http://config-reactive-service:8888
    depends_on:
      - config-reactive-service
      - eureka-reactive-service
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://cart-reactive-service:8550/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - springboot-ecom-network


  order-reactive-service:
    container_name: order-reactive-service
    build:
      context: ./order_reactive_service
      dockerfile: Dockerfile
    ports:
      - "8660:8660"
    environment:
      SPRING_CLOUD_CONFIG_URI: http://config-reactive-service:8888
    depends_on:
      - config-reactive-service
      - eureka-reactive-service
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://order-reactive-service:8660/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - springboot-ecom-network


  checkout-reactive-service:
    container_name: checkout-reactive-service
    build:
      context: ./checkout_reactive_service
      dockerfile: Dockerfile
    ports:
      - "8770:8770"
    environment:
      SPRING_CLOUD_CONFIG_URI: http://config-reactive-service:8888
    depends_on:
      - config-reactive-service
      - eureka-reactive-service
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://checkout-reactive-service:8770/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - springboot-ecom-network

#  notification-reactive-service:
#    container_name: notification-reactive-service
#    build:
#      context: ./notification_reactive_service
#      dockerfile: Dockerfile
#    ports:
#      - "8880:8880"
#    environment:
#      SPRING_CLOUD_CONFIG_URI: http://config-reactive-service:8888
#    depends_on:
#      - config-reactive-service
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "http://localhost:8880/actuator/health" ]
#      interval: 30s
#      timeout: 10s
#      retries: 5
#    networks:
#      - springboot-ecom-network
#
#
#  merchant-reactive-service:
#    container_name: merchant-reactive-service
#    build:
#      context: ./merchant_reactive_service
#      dockerfile: Dockerfile
#    ports:
#      - "8990:8990"
#    environment:
#      SPRING_CLOUD_CONFIG_URI: http://config-reactive-service:8888
#    depends_on:
#      - config-reactive-service
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "http://localhost:8990/actuator/health" ]
#      interval: 30s
#      timeout: 10s
#      retries: 5
#    networks:
#      - springboot-ecom-network


networks:
  springboot-ecom-network:
    external: false
    name: springboot-ecom-network

